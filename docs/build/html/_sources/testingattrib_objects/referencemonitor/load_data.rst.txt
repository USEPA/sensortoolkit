Loading Reference Data
======================

Reference data are loaded either via the ``ReferenceMonitor.load_data()`` method,
or, if users wish to query the AirNow or AQS API, either the ``ReferenceMonitor.query_aqs()``
or the ``ReferenceMonitor.query_aqs()`` method should be used.

A description and example of each method is detailed below, where information has been
sorted by the reference data source or API service.

.. tabbed:: Local

  To load reference data from locally acquired files, users should call the
  ``ReferenceMonitor.load_data()`` method. This method accepts the following arguments:

  .. list-table:: ``ReferenceMonitor.load_data()`` Arguments
    :widths: 50 75
    :header-rows: 1

    * - Argument
      - Description
    * - ``bdate``
      - The beginning date ("YYYY-MM-DD" format) for the sensor testing period.
    * - ``edate``
      - The ending date ("YYYY-MM-DD" format) for the sensor testing period.
    * - ``param_list``
      - A list of SDFS parameters measured by reference monitors at the monitoring
        site for which data will be loaded.
    * - ``met_data``
      - Optional, if true, meteorological data will be loaded in addition to datasets
        corresponding to parameters passed to ``param_list``. Defaults to true
        (U.S. EPA's documents for recommended performance testing protocols, metrics,
        and target values encourage users to report meteorological conditions for
        sensor performance evaluations and reports).

  .. note::

    The ``ReferenceMonitor.reference_setup()`` method saves SDFS formatted reference
    datasets in month-long segments (e.g.,
    ``/data/reference_data/local/processed/Burdens_Creek_370630099/H_201909_PM.csv``
    corresponds to 1-hour averaged reference data for instruments at the Burdens
    Creek monitoring site that measured particulate matter during the month of
    September 2019).

    ``ReferenceMonitor.load_data()`` will load monthly datasets corresponding to
    the set of months spanning the ``bdate`` and ``edate`` arguments.

  .. code-block:: python

    reference_object.load_data(bdate='2019-08-01',
                               edate='2019-09-15',
                               param_list=['PM25'])

  .. code-block:: console

    Loading reference dataframes
    ..2019-08
    ....H_201908_PM.csv
    ....H_201908_Met.csv
    ..2019-09
    ....H_201909_PM.csv
    ....H_201909_Met.csv

.. tabbed:: AirNowTech

  To load processed (SDFS formatted) airnowtech datasets, users should call the
  ``ReferenceMonitor.load_data()`` method. This method accepts the following arguments:

  .. list-table:: ``ReferenceMonitor.load_data()`` Arguments
    :widths: 50 75
    :header-rows: 1

    * - Argument
      - Description
    * - ``bdate``
      - The beginning date ("YYYY-MM-DD" format) for the sensor testing period.
    * - ``edate``
      - The ending date ("YYYY-MM-DD" format) for the sensor testing period.
    * - ``param_list``
      - A list of SDFS parameters measured by reference monitors at the monitoring
        site for which data will be loaded.
    * - ``met_data``
      - Optional, if true, meteorological data will be loaded in addition to datasets
        corresponding to parameters passed to ``param_list``. Defaults to true
        (U.S. EPA's documents for recommended performance testing protocols, metrics,
        and target values encourage users to report meteorological conditions for
        sensor performance evaluations and reports).

  .. note::

    The ``ReferenceMonitor.reference_setup()`` method saves SDFS formatted reference
    datasets in month-long segments (e.g.,
    ``/data/reference_data/airnowtech/processed/Burdens_Creek_370630099/H_201909_PM.csv``
    corresponds to 1-hour averaged reference data for instruments at the Burdens
    Creek monitoring site that measured particulate matter during the month of
    September 2019).

    ``ReferenceMonitor.load_data()`` will load monthly datasets corresponding to
    the set of months spanning the ``bdate`` and ``edate`` arguments.

  .. code-block:: python

    reference_object.load_data(bdate='2019-08-01',
                               edate='2019-09-15',
                               param_list=['PM25'])

  .. code-block:: console

    Loading reference dataframes
    ..2019-08
    ....H_201908_PM.csv
    ....H_201908_Met.csv
    ..2019-09
    ....H_201909_PM.csv
    ....H_201909_Met.csv

.. tabbed:: Querying the AQS API

  .. code-block:: python

    aqs_username = 'usernam@email.com'
    aqs_key = 'NOT-A-REAL-KEY'

    ref.query_aqs(username=aqs_username,
                key=aqs_key,
                param_list=['PM25'],
                bdate='2019-08-01',
                edate='2019-09-15')

  .. code-block:: console

    Querying AQS API
    ..Parameter(s): PM25
    ..Query start: 2019-08-01
    ..Query end: 2019-08-31
    ..Response status: Success
    ..Query start: 2019-08-01
    ..Query end: 2019-08-31
    ..Response status: Success
    ..Query site(s):
    ....Site name: Triple Oak
    ......AQS ID: 37-183-0021
    ......Latitude: 35.8652
    ......Longitude: -78.8197
    Querying AQS API
    ..Parameter(s): PM25
    ..Query start: 2019-09-01
    ..Query end: 2019-09-30
    ..Response status: Success
    ..Query start: 2019-09-01
    ..Query end: 2019-09-30
    ..Response status: Success
    ..Query site(s):
    ....Site name: Triple Oak
    ......AQS ID: 37-183-0021
    ......Latitude: 35.8652
    ......Longitude: -78.8197
    Querying AQS API
    ..Parameter(s): Temp, RH
    ..Query start: 2019-08-01
    ..Query end: 2019-08-31
    ..Response status: No data matched your selection
    Querying AQS API
    ..Parameter(s): Temp, RH
    ..Query start: 2019-09-01
    ..Query end: 2019-09-30
    ..Response status: No data matched your selection

.. tabbed:: Querying the AirNow API

  .. code-block:: python

    airnow_key = 'NOT-A-REAL-KEY'
    ref.query_airnow(key=airnow_key,
                     param_list=['PM25'],
                     bdate='2019-08-01',
                     edate='2019-09-15')

  .. code-block:: console

    Querying AirNow API
    ..Parameter(s): PM25
    ..Query start: 2019-08-01
    ..Query end: 2019-08-31
    ..Query site(s):
    ....Site name: Burdens Creek
    ......AQS ID: 37-063-0099
    ......Latitude: 35.8894
    ......Longitude: -78.8747
    ..Query Status: Success
    Querying AirNow API
    ..Parameter(s): PM25
    ..Query start: 2019-09-01
    ..Query end: 2019-09-30
    ..Query site(s):
    ....Site name: Burdens Creek
    ......AQS ID: 37-063-0099
    ......Latitude: 35.8894
    ......Longitude: -78.8747
    ..Query Status: Success

-----

.. note::

  For details on accessing reference datasets via the ``reference_object.data`` attribute,
  please see `Accessing reference data <../../data_structures/reference_data.html#accessing-reference-data>`_
